doctype html
html(lang='en')
	head
		title Exam list
		script.
			var server = !{script_vars};
		include common.pug
		script(src='/static/admin/jquery.fileupload.js')
		script.
			var alphabet = 'ABCDEFGHIJKLMNOP';
			$(function(){
				Vue.component('dropdown', {
					props: {
						range: Number, 
						value: {}, 
						abc: { 
							type: Boolean,
							default: false
						}
					},
					template: '#dropdown-template',
					mounted: function () {
						var items = [];
						for(var i=1;i<=this.range;i++)
							items.push({
								name: this.abc?alphabet[i-1]:i,
								value: i,
								selected: i==this.value
							});
						var self = this;
						$(this.$el).dropdown({
							values: items ,
							onChange: function(val){
								val = +val;
								if(val && val!=self.value){
									self.$emit('input', val);
								}
							}
						});
					},
					watch: {
						range: function (newRange) {
							newRange = +newRange;
							if(this.value > newRange)
								this.$emit('input', newRange);
							var items = [];
							for(var i=1;i<=newRange;i++)
								items.push({
									name: this.abc?alphabet[i-1]:i,
									value: i,
									selected: i==this.value
								});
							$(this.$el).dropdown('setup menu',{ values: items })
						},
						value: function (newValue, oldValue) {
							if(+newValue != +$(this.$el).dropdown('get value'))
								$(this.$el).dropdown('set selected', ''+newValue);
						},
					},
					destroyed: function () {
						$(this.$el).off().remove();
					}
				})
				var app = new Vue({
					el: 'main',
					data : {
						problems: server.problems,
						new_choices: 4
					},
					methods: {
						create: function(){
						},
						zoom: function(e){
							$('#imgmodal img')
								.attr('src', $(e.target).attr('src'))
								.removeClass('hide');
							$('#imgmodal')
								.modal('show')
								.modal('unbind scrollLock');
						},
						newImage: function(){
							$('#imgmodal img').addClass('hide');
							$('#imgmodal')
								.modal('show')
								.modal('unbind scrollLock');
						},
						deleteProblem: function(problem, index){
							var self = this;
							$('#delete-confirm').modal({
								duration: 100,
								onApprove: function(){
									self.problems.splice(index, 1);
								}
							}).modal('show');
						}
					},
					computed: {
					}
				});
				$('#imgmodal .content').click(function(){
					
				});
				$('#imgmodal').modal({
					onShow:function(){
						$('#imgmodal .errormsg').text('Paste or drop image here.');
						setTimeout(function(){
							$('#imgmodal .overlay').get(0).focus();
						},0);
					},
					autofocus: false
				});
				$('#imgmodal').on('paste',function(e){
					e.preventDefault();
					e.stopPropagation();
					var items = e.originalEvent.clipboardData.items;
					if(!items) return;
					for(var item in items){
						if(/image/.test(items[item].type)){
							var file = items[item].getAsFile();
							$('#fileupload').fileupload('add', {files: file});
							return;
						}
					}
				});
				$('#imgmodal .overlay').on('keyup',function(){
					$(this).text('overlay');
				});
				$('#fileupload').fileupload({
					url: '/admin/upload/1',
					dataType: 'json',
					dropZone: $('#imgmodal'),
					add: function (e, data) {
						var uploadFile = data.files[0];
						if (!(/\.(gif|jpg|jpeg|png)$/i).test(uploadFile.name)) {
							console.log('!!');
							$('#imgmodal .errormsg').text('ไฟล์รูปเท่านั้น');
							return;
						}
						data.submit();
					},
					done: function(e,data){
						console.log(data.response());
						$('#imgmodal img')
							.attr('src', data.response().result.url)
							.removeClass('hide');
					},
					progressall: function (e, data) {
						var progress = parseInt(data.loaded / data.total * 100, 10);
						$('#imgmodal .progress').progress('set percent', progress);
					}
				});
			});
	body
		script#dropdown-template(type="text/x-template")
			.ui.fluid.search.selection.dropdown
				i.dropdown.icon
				.text
		#imgmodal.ui.fullscreen.modal
			.header Change image
			.content
				.ui.placeholder.segment
					.ui.icon.header
						i.image.icon
						span.errormsg
					#upload-btn.ui.primary.labeled.icon.button
						input#fileupload(type="file",name="file")
						i.upload.icon
						| Upload
					.ui.tiny.progress
						.bar
					.overlay(contenteditable="true") overlay
				img.ui.img
			.actions
				//- .ui.red.button Delete
				//- | &emsp;
				.ui.cancel.button Cancel
				.ui.primary.button Change
		#delete-confirm.ui.mini.modal
			.header
				i.trash.alternate.icon
				| Delete Confirmation
			.content
				| ถ้าหากลบแล้วจะไม่สามารถ เรียกคืนข้อมูลได้
			.actions
				.ui.red.cancel.button Cancel
				.ui.green.ok.button Delete
		nav.ui.fixed.navbar.menu
			.item
				.ui.breadcrumb
					a.section(href='/admin/quiz_list') Quiz List
					i.right.arrow.icon.divider
					a.section(href='/admin/quiz/'+quiz.quiz_id)= quiz.title
					i.right.arrow.icon.divider
					.active.section Problems
			.right.menu
				a.item(href='/admin/logout') Logout
		main.ui.grid.container(v-cloak)
			.column
				h1.ui.dividing.header= quiz.title
				table.ui.selectable.celled.table.problem-list
					thead
						tr
							th.one.wide ลำดับ
							th.six.wide รูปคำถาม
							th.six.wide รูปเพิ่มเติม
							th.one.wide จำนวนตัวเลือก
							th.one.wide คำตอบ
					tbody
						tr(v-for="(problem, index) in problems")
							td
								.ui.icon.button
									i.chevron.up.icon
								//- p
								//- 	.ui.icon.button(@click="deleteProblem(problem, index)")
								//- 		i.trash.icon
								p
									.ui.icon.button
										i.chevron.down.icon
							td.images
								img.zoom(v-if="+problem.image_main",:src="'/admin/image/'+problem.problem_id",@click="zoom")
							td.images
								img.zoom(v-if="+problem.image_aux",:src="'/admin/image/'+problem.problem_id+'X'",@click="zoom")
								.ui.big.circular.icon.button(v-else,@click="newImage")
									i.plus.icon
							td
								dropdown(:range=12,v-model="problem.choices")
							td
								dropdown(:range="+problem.choices",v-model="problem.correct_choice",abc)
						tr
							td New
							td.images
								.ui.big.circular.icon.button(@click="newImage")
									i.plus.icon
							td.images
							td
								dropdown(:range=12,:value=4)
							td