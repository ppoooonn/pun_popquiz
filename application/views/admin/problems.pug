doctype html
html(lang='en')
	head
		title Exam list
		script.
			var server = <?= $script_vars ?>;
		include common.pug
		script(src='/static/admin/jquery.fileupload.js')
		script.
			var alphabet = 'ABCDEFGHIJKLMNOP';
			$(function(){
				Vue.component('dropdown', {
					props: {
						range: Number, 
						value: {}, 
						abc: { 
							type: Boolean,
							default: false
						}
					},
					template: '#dropdown-template',
					mounted: function () {
						var items = [];
						for(var i=1;i<=this.range;i++)
							items.push({
								name: this.abc?alphabet[i-1]:i,
								value: i,
								selected: i==this.value
							});
						var self = this;
						$(this.$el).dropdown({
							values: items ,
							onChange: function(val){
								val = +val;
								if(val && val!=self.value){
									self.$emit('input', val);
									self.$emit('change', val);
								}
							}
						});
					},
					watch: {
						range: function (newRange) {
							newRange = +newRange;
							if(this.value > newRange)
								this.$emit('input', newRange);
							var items = [];
							for(var i=1;i<=newRange;i++)
								items.push({
									name: this.abc?alphabet[i-1]:i,
									value: i,
									selected: i==this.value
								});
							$(this.$el).dropdown('setup menu',{ values: items })
						},
						value: function (newValue, oldValue) {
							if(+newValue != +$(this.$el).dropdown('get value'))
								$(this.$el).dropdown('set selected', ''+newValue);
						},
					},
					destroyed: function () {
						$(this.$el).off().remove();
					}
				})
				window.app = new Vue({
					el: 'main',
					data : {
						problems: server.problems?server.problems:[],
						new_choices: 4
					},
					methods: {
						create: function(){
						},
						zoom: function(e, problem_id, aux){
							fileupload_data = {problem_id:problem_id,aux:aux};
							$('#imgmodal img')
								.attr('src', $(e.target).attr('src'))
								.removeClass('hide');
							$('#imgmodal')
								.modal('show')
								.modal('unbind scrollLock');
						},
						newImage: function(problem_id, aux){
							fileupload_data = {problem_id:problem_id,aux:aux};
							$('#imgmodal img').addClass('hide');
							$('#imgmodal')
								.modal('show')
								.modal('unbind scrollLock');
						},
						updateChoice: function(problem){
							setTimeout(function(){
								$.post({
									url: '/admin/api_problem_set',
									data: {
										problem_id: +problem.problem_id,
										choices: +problem.choices,
										correct_choice: +problem.correct_choice
									},
									success: function(resp){},
									dataType: 'json'
								});
							},0);
						},
						deleteProblem: function(problem, index){
							var self = this;
							$('#delete-confirm').modal({
								duration: 100,
								onApprove: function(){
									$.post({
										url: '/admin/api_problem_delete',
										data: {
											problem_id: problem.problem_id
										},
										success: function(resp){
											self.problems.splice(index, 1);
										},
										dataType: 'json'
									});
								}
							}).modal('show');
						}
					},
					computed: {
					}
				});
				$('#imgmodal').modal({
					onShow:function(){
						fileupload_data.open = 1;
						$('#imgmodal .errormsg').text('Paste or drop image here.');
						setTimeout(function(){
							$('#imgmodal .overlay').get(0).focus();
						},0);
					},
					onHidden: function(){
						fileupload_data = {};
					},
					onDeny: function(){ // TODO:catch all deny
						if(fileupload_data.filename){
							$.post({
								url: '/admin/api_preview_cancel',
								data: {filename: fileupload_data.filename}
							});
						}
						return true;
					},
					onApprove: function(){
						if(fileupload_data.filename){
							var isnew = fileupload_data.problem_id == 0;
							var isaux = fileupload_data.aux;
							var payload = {
								quiz_id: server.quiz_id,
								problem_id: fileupload_data.problem_id,
							};
							if(isaux)
								payload.image_aux = fileupload_data.filename;
							else
								payload.image_main = fileupload_data.filename;
							if(isnew){
								payload.choices = +app.new_choices;
							}
							$.post({
								url: '/admin/api_problem_set',
								data: payload,
								success: function(resp){
									if('problem' in resp){
										if(isnew){
											app.problems.push(resp.problem);
										}else{
											var p = 0;
											for(var p = 0;p<app.problems.length;p++){
												if(app.problems[p].problem_id == resp.problem.problem_id){
													for(var i in resp.problem)
														app.problems[p][i] = resp.problem[i];
													app.problems[p][isaux?'image_aux':'image_main'] += Math.random();
												}
											}
										}
									}
								},
								dataType: 'json'
							});
						}
						return true;
					},
					autofocus: false
				});
				$(window).on('paste',function(e){
					if(!fileupload_data.open)
						return true;
					e.preventDefault();
					e.stopPropagation();
					var items = e.originalEvent.clipboardData.items;
					if(!items) return;
					for(var item in items){
						if(/image/.test(items[item].type)){
							var file = items[item].getAsFile();
							$('#fileupload').fileupload('add', {files: file});
							return;
						}
					}
				});
				$('#imgmodal .overlay').on('keyup',function(){
					$(this).text('overlay');
				});
				var fileupload_data = {};
				$('#fileupload').fileupload({
					url: '/admin/upload',
					dataType: 'json',
					dropZone: $('#imgmodal'),
					sequentialUploads: true,
					formData: function(){return [
						{name:'problem_id', value:fileupload_data.problem_id},
						{name:'quiz_id', value: server.quiz_id}
					];},
					add: function (e, data) {
						var uploadFile = data.files[0];
						if (!(/\.(gif|jpg|jpeg|png)$/i).test(uploadFile.name)) {
							$('#imgmodal .errormsg').text('ไฟล์รูปเท่านั้น');
							return;
						}
						data.submit();
					},
					done: function(e,data){
						fileupload_data.filename = data.response().result.filename;
						$('#imgmodal img')
							.attr('src', data.response().result.url+'?'+Math.random())
							.removeClass('hide');
					},
					progressall: function (e, data) {
						var progress = parseInt(data.loaded / data.total * 100, 10);
						$('#imgmodal .progress').progress('set percent', progress);
					}
				});
				$('#imgmodal img').on('load',function(){
					$('#imgmodal').resize();
				});
			});
	body
		script#dropdown-template(type="text/x-template")
			.ui.fluid.search.selection.dropdown
				i.dropdown.icon
				.text
		#imgmodal.ui.fullscreen.modal
			.header Change image
			.content
				.ui.placeholder.segment
					.ui.icon.header
						i.image.icon
						span.errormsg
					#upload-btn.ui.primary.labeled.icon.button
						input#fileupload(type="file",name="file")
						i.upload.icon
						| Upload
					.ui.tiny.progress
						.bar
					.overlay(contenteditable="true") overlay
				img.ui.img
			.actions
				//- .ui.red.button Delete
				//- | &emsp;
				.ui.cancel.button Cancel
				.ui.primary.ok.button Change
		#delete-confirm.ui.mini.modal
			.header
				i.trash.alternate.icon
				| Delete Confirmation
			.content
				| ถ้าหากลบแล้วจะไม่สามารถ เรียกคืนข้อมูลได้
			.actions
				.ui.red.cancel.button Cancel
				.ui.green.ok.button Delete
		nav.ui.fixed.navbar.menu
			.item
				.ui.breadcrumb
					a.section(href='/admin/quiz_list') Quiz List
					i.right.arrow.icon.divider
					a.section(href!="<?= '/admin/quiz/'.($quiz->quiz_id) ?>") <?= htmlspecialchars($quiz->title) ?>
					i.right.arrow.icon.divider
					.active.section Problems
			.right.menu
				a.item(href='/admin/logout') Logout
		main.ui.grid.container(v-cloak)
			.column
				h1.ui.dividing.header <?= htmlspecialchars($quiz->title) ?>
				table.ui.selectable.celled.table.problem-list
					thead
						tr
							//- TODO ลบ + ลำดับ
							//- TODO ลบ image_aux
							th.one.wide ลบ
							th.six.wide รูปคำถาม
							th.six.wide รูปเพิ่มเติม
							th.one.wide จำนวนตัวเลือก
							th.one.wide คำตอบ
					tbody
						tr(v-for="(problem, index) in problems")
							td
								// .ui.icon.button
								// 	i.chevron.up.icon
								p
									.ui.icon.button(@click="deleteProblem(problem, index)")
										i.trash.icon
							// 	p
							// 		.ui.icon.button
							// 			i.chevron.down.icon
							td.images
								img.zoom(v-if="+problem.image_main",:src="'/admin/image/'+problem.problem_id+(+problem.image_main!=1?'?'+problem.image_main:'')",@click="zoom($event, +problem.problem_id)")
							td.images
								img.zoom(v-if="+problem.image_aux",:src="'/admin/image/'+problem.problem_id+'X'+(+problem.image_aux!=1?'?'+problem.image_aux:'')",@click="zoom($event, +problem.problem_id, 1)")
								.ui.big.circular.icon.button(v-else,@click="newImage(+problem.problem_id, 1)")
									i.plus.icon
							td
								dropdown(:range=12,v-model="problem.choices",@change="updateChoice(problem)")
							td
								dropdown(:range="+problem.choices",v-model="problem.correct_choice",abc,@change="updateChoice(problem)")
						tr
							td
								.ui.icon
									i.big.edit.icon
							td.images
								.ui.big.circular.icon.button(@click="newImage(0)")
									i.plus.icon
							td.images
							td
								dropdown(:range=12,:value=4)
							td